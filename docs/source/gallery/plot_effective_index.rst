
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_effective_index.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_effective_index.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_effective_index.py:


Effective index VS core index
=============================

.. GENERATED FROM PYTHON SOURCE LINES 8-10

Imports
~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 10-14

.. code-block:: python3

    from PyFiberModes import FiberFactory, HE11, HE12, HE22
    from MPSPlots.render2D import SceneList
    import numpy








.. GENERATED FROM PYTHON SOURCE LINES 15-18

Generating the fiber structures
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Here we create the different fiber design that we want to explore

.. GENERATED FROM PYTHON SOURCE LINES 18-24

.. code-block:: python3

    core_indexes = numpy.linspace(1.464, 1.494, 100)
    factory = FiberFactory()
    factory.add_layer(name="core", radius=4e-6, index=core_indexes)
    factory.add_layer(name="cladding", index=1.4444)









.. GENERATED FROM PYTHON SOURCE LINES 25-26

Preparing the figure

.. GENERATED FROM PYTHON SOURCE LINES 26-46

.. code-block:: python3

    figure = SceneList(title='Effective index vs core index')

    ax = figure.append_ax(show_legend=True)

    for mode in [HE11, HE12, HE22]:
        data = []
        for fiber in factory:
            effective_index = fiber.get_effective_index(mode, 1550e-9)
            data.append(effective_index)

        ax.add_line(
            x=core_indexes,
            y=data,
            label=mode,
            line_width=2
        )

    figure.show()

    # -


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/docs/examples/plot_effective_index.py", line 33, in <module>
        effective_index = fiber.get_effective_index(mode, 1550e-9)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/fiber.py", line 447, in get_effective_index
        neff = self.neff_solver.solve(
               ^^^^^^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/solver/ssif.py", line 150, in solve
        result = self._findBetween(
                 ^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/solver/solver.py", line 77, in _findBetween
        function(lowbound, *function_args),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/solver/ssif.py", line 569, in _heceq
        term_0, term_1 = self.get_HE_EH_terms(
                         ^^^^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/solver/ssif.py", line 536, in get_HE_EH_terms
        u, w, v = self.get_U_W_V_parameter(wavelength=wavelength, neff=neff)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/Users/martinpdes/Desktop/GitProject/PyFiberModes/PyFiberModes/solver/ssif.py", line 445, in get_U_W_V_parameter
        U = core.radius_out * wavelength.k0 * numpy.sqrt(n_core**2 - neff**2)
                              ^^^^^^^^^^^^^
    AttributeError: 'numpy.float64' object has no attribute 'k0'





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.094 seconds)


.. _sphx_glr_download_gallery_plot_effective_index.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_effective_index.py <plot_effective_index.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_effective_index.ipynb <plot_effective_index.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
